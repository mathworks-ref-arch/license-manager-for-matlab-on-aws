{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "AMI": "ami-0212d27aacb7fba86"
      },
      "us-east-2": {
        "AMI": "ami-02b88db5ddee147bd"
      },
      "us-west-1": {
        "AMI": "ami-09d1e51d7bf59e127"
      },
      "us-west-2": {
        "AMI": "ami-0cd8e547ed9bece90"
      },
      "ca-central-1": {
        "AMI": "ami-0b8207a0422dabba3"
      },
      "eu-central-1": {
        "AMI": "ami-0da51c33409e6efeb"
      },
      "eu-west-1": {
        "AMI": "ami-00f78da22502e3358"
      },
      "eu-west-2": {
        "AMI": "ami-0c9cef5a5f3de9ff2"
      },
      "eu-west-3": {
        "AMI": "ami-0544a273a1b8872fc"
      },
      "eu-north-1": {
        "AMI": "ami-0d842d518f74c6ab5"
      },
      "sa-east-1": {
        "AMI": "ami-0caa652ccc638dcbe"
      },
      "me-south-1": {
        "AMI": "ami-032bbd52ff0b88809"
      },
      "ap-east-1": {
        "AMI": "ami-045ad7caf4ebe9c1b"
      },
      "ap-south-1": {
        "AMI": "ami-0cc6e99032b54c1b2"
      },
      "ap-northeast-1": {
        "AMI": "ami-0201021150a5f6c24"
      },
      "ap-northeast-2": {
        "AMI": "ami-054a6f366fc072b3f"
      },
      "ap-southeast-1": {
        "AMI": "ami-0baec2443fe02a484"
      },
      "ap-southeast-2": {
        "AMI": "ami-0e63a12b83b1c892a"
      }
    }
  },
  "Resources": {
    "MWSecurityGroupExternal": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://mathworks-reference-architectures-templates.s3.amazonaws.com/security-group/v2/0/0/security-group.yml",
        "Parameters": {
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrRanges": {
            "Ref": "ClientIPAddress"
          },
          "SSHAccess": "Yes",
          "HTTPSAccess": "Yes",
          "LicenseManagerAccess": "Yes"
        }
      }
    },
    "MWSecurityGroupInternal": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://mathworks-reference-architectures-templates.s3.amazonaws.com/security-group/v2/0/0/security-group.yml",
        "Parameters": {
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrRanges": "0.0.0.0/32",
          "InternalAccess": "Yes"
        }
      }
    },
    "Server": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "ServerInstanceType"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": {
              "Fn::If": [
                "UsePublicIp",
                true,
                false
              ]
            },
            "DeviceIndex": "0",
            "SubnetId": {
              "Ref": "Subnet"
            },
            "GroupSet": [
              {
                "Fn::GetAtt": [
                  "MWSecurityGroupExternal",
                  "Outputs.SecurityGroupId"
                ]
              },
              {
                "Fn::GetAtt": [
                  "MWSecurityGroupInternal",
                  "Outputs.SecurityGroupId"
                ]
              }
            ]
          }
        ],
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "ImageId": {
          "Fn::If": [
            "OverrideAmi",
            {
              "Ref": "InstanceAmiCustom"
            },
            {
              "Fn::FindInMap": [
                "RegionMap",
                {
                  "Ref": "AWS::Region"
                },
                "AMI"
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Network license manager for MATLAB"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                "set -x",
                "# Copyright 2011-2024 The MathWorks, Inc.",
                "mkdir -p /var/log/mathworks",
                "exec > /var/log/mathworks/startup.log 2>&1",
                {
                  "Fn::Sub": [
                    "echo manager:\"$(echo ${PasswordBase64} | base64 --decode)\" | chpasswd --crypt-method SHA512",
                    {
                      "PasswordBase64": {
                        "Fn::Base64": {
                          "Ref": "Password"
                        }
                      }
                    }
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "export OPTIONAL_USER_COMMAND='",
                      {
                        "Fn::Base64": {
                          "Ref": "OptionalUserCommand"
                        }
                      },
                      "'"
                    ]
                  ]
                },
                "",
                "# Decode and execute the optional user command",
                "if [[ -n \"${OPTIONAL_USER_COMMAND}\" ]]; then",
                "    echo 'Decoding and executing optional user command...'",
                "    DECODED_COMMAND=$(echo ${OPTIONAL_USER_COMMAND} | base64 --decode)",
                "    eval \"${DECODED_COMMAND}\"",
                "    source /etc/profile",
                "fi",
                "",
                "/usr/local/bin/create_cert.sh",
                "/mnt/startup.sh"
              ]
            ]
          }
        }
      }
    },
    "ServerEIP": {
      "Type": "AWS::EC2::EIP",
      "Condition": "UsePublicIp",
      "Properties": {
        "InstanceId": {
          "Ref": "Server"
        },
        "Domain": "vpc"
      }
    }
  },
  "Parameters": {
    "VPC": {
      "Description": "ID of an existing VPC in which to deploy this stack",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "Must be the ID of an existing VPC.",
      "AllowedPattern": ".+"
    },
    "Subnet": {
      "Description": "ID of an existing subnet for the license server",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "Must be the ID of an existing Subnet within the chosen VPC.",
      "AllowedPattern": ".+"
    },
    "EnablePublicIPAddress": {
      "Description": "Choose if public IP should be enabled for the license server.",
      "Type": "String",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Default": "Yes"
    },
    "ClientIPAddress": {
      "Description": "Comma-separated list of IP address ranges that will be allowed to connect to this instance. Each IP CIDR should be formatted as <ip_address>/<mask>. The mask determines the number of IP addresses to include. A mask of 32 is a single IP address. Example of allowed values: 10.0.0.1/32 or 10.0.0.0/16,192.34.56.78/32. This calculator can be used to build a specific range: https://www.ipaddressguide.com/cidr. You may need to contact your IT administrator to determine which address is appropriate.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "189",
      "AllowedPattern": "^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2}))(,((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2}))){0,9}$",
      "ConstraintDescription": "Must be a comma-separated list of valid IP CIDR ranges of the form x.x.x.x/x. A maximum of 10 such IP CIDRs are allowed in the list."
    },
    "ServerInstanceType": {
      "Description": "The AWS instance type to use to run the Network License Manager for MATLAB. See https://aws.amazon.com/ec2/instance-types for a list of instance types.",
      "Default": "t2.micro",
      "Type": "String",
      "MinLength": 1,
      "ConstraintDescription": "The instance type must be specified"
    },
    "SSHKeyName": {
      "Description": "The name of an existing EC2 KeyPair to allow SSH access to all the instances. See https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html for details on creating these.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
      "AllowedPattern": ".+"
    },
    "InstanceAmiCustom": {
      "Default": "",
      "Description": "Custom Amazon Machine Image (AMI) in the target region",
      "Type": "String"
    },
    "Password": {
      "NoEcho": "true",
      "Description": "Password for user 'manager'. This is used to login to the Network License Manager for MATLAB dashboard",
      "Type": "String",
      "ConstraintDescription": "",
      "Default": ""
    },
    "ConfirmPassword": {
      "NoEcho": "true",
      "Description": "Confirm Password",
      "Type": "String",
      "ConstraintDescription": "",
      "Default": ""
    },
    "OptionalUserCommand": {
      "Description": "Provide an optional inline shell command to run on machine launch. For example, to set an environment variable CLOUD=AWS, use this command excluding the angle brackets: <echo -e \"export CLOUD=AWS\" | tee -a /etc/profile.d/setenvvar.sh>. To run an external script, use this command excluding the angle brackets: <wget -O /tmp/my-script.sh \"https://www.example.com/script.sh\" && bash /tmp/my-script.sh>. Find the logs at '/var/log/mathworks/startup.log'.",
      "Type": "String",
      "Default": ""
    }
  },
  "Rules": {
    "matchPasswords": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Equals": [
              {
                "Ref": "Password"
              },
              {
                "Ref": "ConfirmPassword"
              }
            ]
          },
          "AssertDescription": "Passwords do not match"
        }
      ]
    }
  },
  "Conditions": {
    "OverrideAmi": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "InstanceAmiCustom"
            },
            ""
          ]
        }
      ]
    },
    "UsePublicIp": {
      "Fn::Equals": [
        {
          "Ref": "EnablePublicIPAddress"
        },
        "Yes"
      ]
    }
  },
  "Outputs": {
    "ServerIP": {
      "Description": "IP address of the network license manager",
      "Value": {
        "Fn::If": [
          "UsePublicIp",
          {
            "Ref": "ServerEIP"
          },
          {
            "Fn::GetAtt": [
              "Server",
              "PrivateIp"
            ]
          }
        ]
      }
    },
    "ServerAddress": {
      "Description": "Address of the Network License Manager for MATLAB dashboard",
      "Value": {
        "Fn::If": [
          "UsePublicIp",
          {
            "Fn::Sub": "https://${Server.PublicDnsName}"
          },
          {
            "Fn::Sub": "https://${Server.PrivateDnsName}"
          }
        ]
      }
    },
    "ServerPrivateDNS": {
      "Description": "Private DNSName of the network license manager",
      "Value": {
        "Fn::GetAtt": [
          "Server",
          "PrivateDnsName"
        ]
      }
    },
    "SecurityGroup": {
      "Description": "The security group to use to access the network license manager",
      "Value": {
        "Fn::GetAtt": [
          "MWSecurityGroupInternal",
          "Outputs.SecurityGroupId"
        ]
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Amazon EC2 Configuration"
          },
          "Parameters": [
            "ServerInstanceType"
          ]
        },
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VPC",
            "Subnet",
            "EnablePublicIPAddress",
            "ClientIPAddress"
          ]
        },
        {
          "Label": {
            "default": "Remote Access"
          },
          "Parameters": [
            "SSHKeyName",
            "Password",
            "ConfirmPassword"
          ]
        },
        {
          "Label": {
            "default": "Optional User Command"
          },
          "Parameters": [
            "OptionalUserCommand"
          ]
        }
      ],
      "ParameterLabels": {
        "ServerInstanceType": {
          "default": "Instance type for the network license manager"
        },
        "EnablePublicIPAddress": {
          "default": "Enable Public IP for the network license manager server"
        },
        "ClientIPAddress": {
          "default": "CIDR IP address ranges of clients"
        },
        "SSHKeyName": {
          "default": "Name of SSH key"
        },
        "Password": {
          "default": "Password"
        },
        "ConfirmPassword": {
          "default": "Confirm Password"
        },
        "VPC": {
          "default": "VPC to deploy this stack to"
        },
        "Subnet": {
          "default": "Subnet for the license server"
        },
        "OptionalUserCommand": {
          "default": "Optional user inline command"
        }
      }
    }
  }
}